@{
    ViewBag.Title = @ViewBag.symbol;
}

@section featured {

    <script type="text/javascript" src="~/Scripts/jquery.min.js"></script>

    <div class="jumbotron">
        <div class="container">
            <h1>@ViewBag.Title</h1>
        </div>
    </div>
    <table id="stockChart" class="bordered">
        <thead id="stockchartHead"></thead>
        <tbody id="stockChartBody"></tbody>
    </table>
    <div id="chartDemoContainer" style="height: 500px; min-width: 500px; margin-bottom: 30px;" data-highcharts-chart="0"></div>

    <script type="text/javascript">

        function QuoteService(sSymbol, fCallback) {
            this.symbol = sSymbol;
            this.fCallback = fCallback;
            this.DATA_SRC = "http://dev.markitondemand.com/Api/v2/Quote/jsonp";
            this.makeRequest();
        };

        /**
        * Ajax success callback. fCallback is the 2nd argument in the QuoteService constructor.
        */
        QuoteService.prototype.handleSuccess = function (jsonResult) {
            this.fCallback(jsonResult);
        };

        /**
        * Ajax error callback
        */
        QuoteService.prototype.handleError = function (jsonResult) {
            console.error(jsonResult);
        };

        /**
        * Starts a new ajax request to the Quote API
        */
        QuoteService.prototype.makeRequest = function () {
            //Abort any open requests
            if (this.xhr) { this.xhr.abort(); }
            //Start a new request
            this.xhr = $.ajax({
                data: { symbol: this.symbol },
                url: this.DATA_SRC,
                dataType: "jsonp",
                success: this.handleSuccess,
                error: this.handleError,
                context: this
            });
        };

        QuoteService.prototype.price = function (jsonResult) {
            alert();
        }

        QuoteService.prototype.success = function (jsonResult) {
            var $container = $("<div class='hide' id='resultContainer' />");
            $container.append("<h4>" + jsonResult.Name + " (" + jsonResult.Symbol + ")</h4>");
            $container.append(this.renderResultTable(jsonResult));

            $container.fadeIn('fast');
        };

        QuoteService.prototype.renderResultTable = function (jsonResult) {
            var thead = $("#stockchartHead"),
                tbody = $("#stockChartBody"),
                tableHeadCells = [];
            tableCells = [];

            tableHeadCells.push("<tr>");
            tableHeadCells.push("<th>Last Price</th>");
            tableHeadCells.push("<th>Change</th>");
            tableHeadCells.push("<th>Change Percent</th>");
            tableHeadCells.push("<th>Change Percent YTD</th>");
            tableHeadCells.push("<th>Last Traded</th>");
            tableHeadCells.push("</tr>");

            tableCells.push("<tr>");
            tableCells.push("<td>$", jsonResult.LastPrice, "</td>");
            tableCells.push("<td>", this.formatChgPct(jsonResult.Change), "</td>");
            tableCells.push("<td>", this.formatChgPct(jsonResult.ChangePercent), "%</td>");
            tableCells.push("<td>", jsonResult.ChangePercentYTD.toFixed(2), "%</td>");
            tableCells.push("<td>", jsonResult.Timestamp, "</td>");
            tableCells.push("</tr>");

            thead.append(tableHeadCells.join(""));
            tbody.append(tableCells.join(""));
        };

        QuoteService.prototype.formatChgPct = function (chg) {
            //the quote API returns negative numbers already,
            //so we just need to add the + sign to positive numbers
            return (chg <= 0) ? chg.toFixed(2) : "+" + chg.toFixed(2);
        };

        window.onload = function () {
            graph();

            var ticker = '@ViewBag.symbol';

            new QuoteService(ticker, function (jsonResult) {

                //Catch errors
                if (!jsonResult || jsonResult.Message) {
                    alert(jsonResult);
                    return;
                }

                this.success(jsonResult);

            });
        };
    </script>
}